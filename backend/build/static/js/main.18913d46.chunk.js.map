{"version":3,"sources":["mutations.ts","components/RegisterForm.tsx","components/LoginForm.tsx","components/dashboard/MainListItems.tsx","queries.ts","components/dashboard/displays/MenuDisplay.tsx","components/dashboard/displays/RestaurantInfoDisplay.tsx","components/dashboard/displays/ItemTable.tsx","components/dashboard/displays/AddItemDisplay.tsx","components/dashboard/displays/DashboardDisplay.tsx","components/dashboard/Dashboard.tsx","styling/theme.js","displaySite/Menu.tsx","displaySite/Contacts.tsx","displaySite/FrontPage.tsx","App.tsx","index.tsx"],"names":["ADD_ITEM","gql","DELETE_ITEM","DELETE_ALL_ITEMS","CREATE_USER","LOGIN","EDIT_USER_CONTACT","ADD_CATEGORY","ADD_ITEM_TO_CATEGORY","EDIT_CATEGORY","REMOVE_ITEM_FROM_CATEGORY","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","popper","border","margin","padding","backgroundColor","palette","background","avatar","secondary","main","form","width","submit","RegisterForm","classes","history","useHistory","useState","email","password","restaurantName","registerInfo","setRegisterInfo","confirmPassword","setConfirmPassword","focused","setFocused","response","setResponse","anchorEl","setAnchorEl","useMutation","onError","error","graphQLErrors","length","msg","message","register","login","result","React","useEffect","data","token","value","localStorage","setItem","passwordInputRef","useRef","emailHelperText","match","getPasswordHelperText","requiredParameters","toLowerCase","concat","Typography","variant","component","key","test","confirmPasswordHelperText","Container","maxWidth","CssBaseline","className","Avatar","onSubmit","event","preventDefault","variables","then","res","setTimeout","push","window","location","reload","noValidate","Grid","container","item","xs","TextField","required","fullWidth","label","autoFocus","type","onChange","target","helperText","onFocus","onBlur","autoComplete","id","current","ref","Popper","open","placement","Button","color","justify","Link","href","Snackbar","autoHideDuration","onClose","Alert","severity","AlertTitle","LoginForm","setEmail","setPassword","selected","grey","notSelected","MainListItems","setOnDisplay","List","ListItem","button","onClick","ListItemIcon","ListItemText","primary","GET_ME","GET_ITEMS","GET_ITEMS_NOT_IN_CATEGORY","GET_CATEGORIES","GET_USER","GET_ID","root","chip","minHeight","marginBottom","select","containerItem","MenuDisplay","show","categoryName","setCategoryName","categoryDesc","setCategoryDesc","currCategory","setCurrCategory","editedCategoryName","editCategoryName","editedCategoryDesc","editCategoryDesc","selectedItems","changeSelectedItems","items","useQuery","categories","refetchQueries","query","addCategory","editCategory","addItemsToCategory","removeItemFromCategory","menuItems","setMenuItems","chips","setChips","itemsNotInCategories","setItemsNotInCategories","loading","getItemsNotInCategory","Array","map","name","MenuItem","getCategories","currCategoryObject","find","Chip","size","substring","onDelete","itemId","desc","md","multiline","InputLabel","Select","labelId","multiple","input","Input","disabled","MenuProps","PaperProps","style","startsWith","RestaurantInfoDisplay","initialInfo","editUserContact","instagram","setInsta","youtube","setYoutube","twitter","setTwitter","facebook","setFacebook","phone","setPhone","address","setAddress","me","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","props","onSelectAllClick","order","onRequestSort","TableHead","TableRow","TableCell","Checkbox","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","createStyles","paddingLeft","paddingRight","highlight","lighten","light","text","dark","title","flex","EnhancedTableToolbar","numSelected","handleDelete","filter","setFilter","Toolbar","clsx","e","Tooltip","IconButton","aria-label","table","minWidth","clip","height","overflow","position","top","ItemTable","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","rows","setRows","console","log","deleteItem","deleteAllItems","listOfItems","getItems","newRows","description","cost","displayRows","includes","emptyRows","Math","min","Paper","success","forEach","TableContainer","Table","aria-labelledby","rowIds","n","checked","newSelecteds","index","self","indexOf","_","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","row","isItemSelected","hover","selectedIndex","newSelected","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","registerPlugin","FilePondPluginImagePreview","FilePondPluginImageExifOrientation","FilePondPluginFileValidateType","FilePondPluginImageResize","FilePondPluginFileEncode","firstItem","lastItem","AddItemDisplay","setName","setCost","setDesc","focus","setFocus","file","setFile","update","store","dataInStore","readQuery","addItem","writeQuery","parseFloat","imgStringBase64","getFileEncodeBase64String","lg","FormLabel","htmlFor","files","imagePreviewHeight","imagePreviewMaxFileSize","imageResizeMode","acceptedFileTypes","allowMultiple","onupdatefiles","fileItems","DashboardDisplay","getId","link","origin","toolbar","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","flexGrow","paddingTop","paddingBottom","fixedHeight","separator","Dashboard","setOpen","onDisplay","client","useApolloClient","user","AppBar","edge","clear","resetStore","Drawer","Divider","createMuiTheme","textAlign","menuTitle","img","maxHeight","Menu","setItems","category","sm","Card","elevation","CardContent","toUpperCase","imgUrl","src","alt","Contacts","appbar","spacer","FrontPage","params","repo","setData","getUser","App","ThemeProvider","path","httpLink","createHttpLink","uri","authLink","setContext","headers","getItem","authorization","ApolloClient","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18913d46.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport const ADD_ITEM = gql`\r\n  mutation addItem(\r\n    $name: String!\r\n    $cost: Float!\r\n    $description: String\r\n    $imgStringBase64: String\r\n  ) {\r\n    addItem(\r\n      name: $name\r\n      cost: $cost\r\n      description: $description\r\n      imgStringBase64: $imgStringBase64\r\n    ) {\r\n      name\r\n      description\r\n      cost\r\n      id\r\n      imgUrl\r\n    }\r\n  }\r\n`;\r\nexport const EDIT_ITEM = gql`\r\n  mutation editItem(\r\n    $id: ID!\r\n    $name: String\r\n    $cost: Float\r\n    $description: String\r\n  ) {\r\n    editItem(id: $id, name: $name, cost: $cost, description: $description) {\r\n      name\r\n      description\r\n      cost\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport const DELETE_ITEM = gql`\r\n  mutation deleteItem($id: ID!) {\r\n    deleteItem(id: $id) {\r\n      name\r\n      description\r\n      cost\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport const DELETE_ALL_ITEMS = gql`\r\n  mutation deleteAllItems {\r\n    deleteAllItems\r\n  }\r\n`;\r\nexport const CREATE_USER = gql`\r\n  mutation createUser(\r\n    $email: String!\r\n    $password: String!\r\n    $restaurantName: String!\r\n    $address: String\r\n    $phone: String\r\n    $facebook: String\r\n    $youtube: String\r\n    $instagram: String\r\n    $twitter: String\r\n  ) {\r\n    createUser(\r\n      email: $email\r\n      password: $password\r\n      restaurantName: $restaurantName\r\n      address: $address\r\n      phone: $phone\r\n      facebook: $facebook\r\n      youtube: $youtube\r\n      instagram: $instagram\r\n      twitter: $twitter\r\n    ) {\r\n      email\r\n      restaurantName\r\n      address\r\n      phone\r\n      facebook\r\n      youtube\r\n      instagram\r\n      twitter\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      value\r\n    }\r\n  }\r\n`;\r\nexport const DELETE_USER = gql`\r\n  mutation deleteUser {\r\n    deleteUser {\r\n      email\r\n      restaurantName\r\n      address\r\n      phone\r\n      facebook\r\n      youtube\r\n      instagram\r\n      twitter\r\n      items {\r\n        name\r\n        description\r\n        cost\r\n        id\r\n      }\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport const EDIT_USER_CONTACT = gql`\r\n  mutation editUserContactInfo(\r\n    $restaurantName: String\r\n    $address: String\r\n    $phone: String\r\n    $facebook: String\r\n    $youtube: String\r\n    $instagram: String\r\n    $twitter: String\r\n  ) {\r\n    editUserContactInfo(\r\n      restaurantName: $restaurantName\r\n      address: $address\r\n      phone: $phone\r\n      facebook: $facebook\r\n      youtube: $youtube\r\n      instagram: $instagram\r\n      twitter: $twitter\r\n    ) {\r\n      email\r\n      restaurantName\r\n      address\r\n      phone\r\n      facebook\r\n      youtube\r\n      instagram\r\n      twitter\r\n    }\r\n  }\r\n`;\r\nexport const ADD_CATEGORY = gql`\r\n  mutation addCategory($name: String!, $desc: String) {\r\n    addCategory(name: $name, desc: $desc) {\r\n      name\r\n      desc\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport const ADD_ITEM_TO_CATEGORY = gql`\r\n  mutation addItemToCategory($id: ID!, $itemId: [ID]!) {\r\n    addItemToCategory(id: $id, itemId: $itemId) {\r\n      name\r\n      desc\r\n      items {\r\n        name\r\n        cost\r\n        description\r\n      }\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport const EDIT_CATEGORY = gql`\r\n  mutation editCategory($id: ID!, $name: String, $desc: String) {\r\n    editCategory(id: $id, name: $name, desc: $desc) {\r\n      name\r\n      desc\r\n      items {\r\n        name\r\n        cost\r\n        description\r\n      }\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport const REMOVE_ITEM_FROM_CATEGORY = gql`\r\n  mutation removeItemFromCategory($id: ID!, $itemId: ID!) {\r\n    removeItemFromCategory(id: $id, itemId: $itemId) {\r\n      name\r\n      desc\r\n      items {\r\n        name\r\n        cost\r\n        description\r\n      }\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  Popper,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { CREATE_USER, LOGIN } from \"../mutations\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  popper: {\r\n    border: \"1px solid\",\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nexport default function RegisterForm() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [registerInfo, setRegisterInfo] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    restaurantName: \"\",\r\n  });\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [focused, setFocused] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLInputElement>(null);\r\n  const [register] = useMutation(CREATE_USER, {\r\n    onError: (error) => {\r\n      if (error.graphQLErrors.length !== 0) {\r\n        const msg = error.graphQLErrors[0].message;\r\n        setResponse(msg);\r\n      }\r\n    },\r\n  });\r\n  const [login, result] = useMutation(LOGIN);\r\n  React.useEffect(() => {\r\n    if (result.data) {\r\n      const token = result.data.login.value;\r\n      localStorage.setItem(\"user-logged-in-token\", token);\r\n    }\r\n  }, [result.data]);\r\n  const passwordInputRef = useRef(null);\r\n  const emailHelperText =\r\n    !registerInfo.email.match(/^\\S+@\\S+$/) &&\r\n    focused !== \"email\" &&\r\n    registerInfo.email !== \"\"\r\n      ? \"This email is invalid\"\r\n      : \"\";\r\n  const getPasswordHelperText = ():\r\n    | React.ReactElement<typeof Typography>\r\n    | string => {\r\n    let requiredParameters: React.ReactElement<typeof Typography>[] = [];\r\n    if (registerInfo.password.toLowerCase() === registerInfo.password)\r\n      requiredParameters = requiredParameters.concat(\r\n        <Typography variant=\"subtitle2\" component=\"p\" key=\"no upper case\">\r\n          Needs an uppercase letter.\r\n        </Typography>\r\n      );\r\n    if (registerInfo.password.length < 8 || registerInfo.password.length > 40)\r\n      requiredParameters = requiredParameters.concat(\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          component=\"p\"\r\n          key=\"too short or too long\"\r\n        >\r\n          Must be between 8 to 40 characters.\r\n        </Typography>\r\n      );\r\n    if (!registerInfo.password.match(/[#?!@$%^&*-]/))\r\n      requiredParameters = requiredParameters.concat(\r\n        <Typography variant=\"subtitle2\" component=\"p\" key=\"no symbol\">\r\n          Contains one of the following: #?!@$%^&*-\r\n        </Typography>\r\n      );\r\n    if (!/\\d/.test(registerInfo.password))\r\n      requiredParameters = requiredParameters.concat(\r\n        <Typography variant=\"subtitle2\" component=\"p\" key=\"no number\">\r\n          Needs at least 1 number.\r\n        </Typography>\r\n      );\r\n\r\n    const passwordHelperText =\r\n      requiredParameters.length !== 0 && focused === \"password\" ? (\r\n        <div>{requiredParameters}</div>\r\n      ) : (\r\n        \"\"\r\n      );\r\n    return passwordHelperText;\r\n  };\r\n  const confirmPasswordHelperText =\r\n    confirmPassword !== registerInfo.password &&\r\n    focused !== \"Confirm password\" &&\r\n    confirmPassword !== \"\"\r\n      ? \"This does not match the password.\"\r\n      : \"\";\r\n  const onSubmit = (event: React.SyntheticEvent<EventTarget>): void => {\r\n    event.preventDefault();\r\n    if (emailHelperText || !registerInfo.email) setResponse(\"Invalid email\");\r\n    else if (\r\n      !registerInfo.password.match(\r\n        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,40}$/\r\n      )\r\n    )\r\n      setResponse(\"Invalid password\");\r\n    else if (registerInfo.password !== confirmPassword)\r\n      setResponse(\"Confirmation password does not match\");\r\n    else if (!registerInfo.restaurantName)\r\n      setResponse(\"Needs a restaurant name\");\r\n    else\r\n      register({\r\n        variables: registerInfo,\r\n      }).then((res) => {\r\n        if (res) {\r\n          setResponse(\"Success\");\r\n          login({\r\n            variables: {\r\n              email: registerInfo.email,\r\n              password: registerInfo.password,\r\n            },\r\n          }).then((res) => {\r\n            if (res) {\r\n              setTimeout(() => {\r\n                history.push(\"/dashboard\");\r\n                window.location.reload();\r\n              }, 1000);\r\n            }\r\n          });\r\n        }\r\n        setRegisterInfo({\r\n          email: \"\",\r\n          password: \"\",\r\n          restaurantName: \"\",\r\n        });\r\n        setConfirmPassword(\"\");\r\n      });\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit} noValidate>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography component=\"h2\" variant=\"subtitle1\">\r\n                Account Information\r\n              </Typography>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"Email Address (public)\"\r\n                autoFocus\r\n                type=\"email\"\r\n                value={registerInfo.email}\r\n                onChange={({ target }) =>\r\n                  setRegisterInfo({ ...registerInfo, email: target.value })\r\n                }\r\n                helperText={emailHelperText}\r\n                onFocus={() => setFocused(\"email\")}\r\n                onBlur={() => setFocused(\"\")}\r\n                error={!!emailHelperText && focused !== \"email\"}\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                value={registerInfo.password}\r\n                id=\"\"\r\n                onChange={({ target }) =>\r\n                  setRegisterInfo({ ...registerInfo, password: target.value })\r\n                }\r\n                onFocus={() => {\r\n                  setFocused(\"password\");\r\n                  setAnchorEl(passwordInputRef.current);\r\n                }}\r\n                onBlur={() => {\r\n                  setFocused(\"\");\r\n                  setAnchorEl(null);\r\n                }}\r\n                error={!!getPasswordHelperText() && focused !== \"password\"}\r\n                ref={passwordInputRef}\r\n              />\r\n            </Grid>\r\n            <Popper\r\n              open={!!anchorEl && !!getPasswordHelperText()}\r\n              anchorEl={anchorEl}\r\n              placement=\"left\"\r\n              className={classes.popper}\r\n            >\r\n              {getPasswordHelperText()}\r\n            </Popper>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"Confirm password\"\r\n                value={confirmPassword}\r\n                type=\"password\"\r\n                onChange={({ target }) => setConfirmPassword(target.value)}\r\n                helperText={confirmPasswordHelperText}\r\n                onFocus={() => setFocused(\"Confirm password\")}\r\n                onBlur={() => setFocused(\"\")}\r\n                error={\r\n                  !!confirmPasswordHelperText && focused !== \"Confirm password\"\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"Restaurant Name\"\r\n                value={registerInfo.restaurantName}\r\n                onChange={({ target }) =>\r\n                  setRegisterInfo({\r\n                    ...registerInfo,\r\n                    restaurantName: target.value,\r\n                  })\r\n                }\r\n                onBlur={() => setFocused(\"\")}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n      <Snackbar\r\n        open={!!response}\r\n        autoHideDuration={6000}\r\n        onClose={() => setResponse(\"\")}\r\n      >\r\n        {response === \"Success\" ? (\r\n          <Alert severity=\"success\">Success!</Alert>\r\n        ) : response !== \"\" ? (\r\n          <Alert severity=\"error\">\r\n            <AlertTitle>Error</AlertTitle>\r\n            {response}\r\n          </Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { LOGIN } from \"../mutations\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function LoginForm() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const [login, result] = useMutation(LOGIN, {\r\n    onError: (error) => {\r\n      if (error.graphQLErrors.length !== 0) {\r\n        const msg = error.graphQLErrors[0].message;\r\n        if (msg === \"wrong credentials\") setResponse(\"Wrong credentials\");\r\n      }\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (result.data) {\r\n      const token = result.data.login.value;\r\n      localStorage.setItem(\"user-logged-in-token\", token);\r\n    }\r\n  }, [result.data]);\r\n  const onSubmit = (event: React.SyntheticEvent<EventTarget>) => {\r\n    event.preventDefault();\r\n    login({ variables: { email, password } }).then((res) => {\r\n      if (res) {\r\n        setResponse(\"Success\");\r\n\r\n        setTimeout(() => {\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          history.push(\"/dashboard\");\r\n          window.location.reload();\r\n        }, 1000);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Email Address\"\r\n            value={email}\r\n            onChange={({ target }) => setEmail(target.value)}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href=\"register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Snackbar\r\n        open={!!response}\r\n        autoHideDuration={6000}\r\n        onClose={() => setResponse(\"\")}\r\n      >\r\n        {response === \"Success\" ? (\r\n          <Alert severity=\"success\">Success!</Alert>\r\n        ) : response !== \"\" ? (\r\n          <Alert severity=\"error\">{response}</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selected: {\r\n    background: theme.palette.grey[300],\r\n  },\r\n  notSelected: {\r\n    background: \"white\",\r\n  },\r\n}));\r\nconst MainListItems = ({\r\n  setOnDisplay,\r\n  display,\r\n}: {\r\n  setOnDisplay: (display: string) => void;\r\n  display: string;\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <List>\r\n      <ListItem\r\n        button\r\n        onClick={() => setOnDisplay(\"dashboard\")}\r\n        className={\r\n          display === \"dashboard\" ? classes.selected : classes.notSelected\r\n        }\r\n      >\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        className={\r\n          display === \"restaurantInfo\" ? classes.selected : classes.notSelected\r\n        }\r\n      >\r\n        <ListItemIcon>\r\n          <ContactsIcon />\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          primary=\"Restaurant Info\"\r\n          onClick={() => setOnDisplay(\"restaurantInfo\")}\r\n        />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        className={display === \"menu\" ? classes.selected : classes.notSelected}\r\n      >\r\n        <ListItemIcon>\r\n          <MenuBookIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Menu\" onClick={() => setOnDisplay(\"menu\")} />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        className={\r\n          display === \"addMenuItem\" ? classes.selected : classes.notSelected\r\n        }\r\n      >\r\n        <ListItemIcon>\r\n          <FastfoodIcon />\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          primary=\"Add Menu Item\"\r\n          onClick={() => setOnDisplay(\"addMenuItem\")}\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n};\r\nexport default MainListItems;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const GET_ME = gql`\r\n  query {\r\n    me {\r\n      email\r\n      restaurantName\r\n      address\r\n      phone\r\n      items {\r\n        name\r\n        description\r\n        cost\r\n        id\r\n        imgUrl\r\n      }\r\n      id\r\n      facebook\r\n      youtube\r\n      instagram\r\n      twitter\r\n    }\r\n  }\r\n`;\r\nexport const GET_ITEMS = gql`\r\n  query {\r\n    getItems {\r\n      name\r\n      description\r\n      cost\r\n      id\r\n      imgUrl\r\n    }\r\n  }\r\n`;\r\nexport const GET_ITEMS_NOT_IN_CATEGORY = gql`\r\n  query {\r\n    getItemsNotInCategory {\r\n      name\r\n      description\r\n      cost\r\n      id\r\n      imgUrl\r\n    }\r\n  }\r\n`;\r\nexport const GET_CATEGORIES = gql`\r\n  query {\r\n    getCategories {\r\n      name\r\n      desc\r\n      id\r\n      items {\r\n        name\r\n        description\r\n        cost\r\n        id\r\n        imgUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const GET_USER = gql`\r\n  query getUser($id: ID!) {\r\n    getUser(id: $id) {\r\n      email\r\n      restaurantName\r\n      address\r\n      phone\r\n      categories {\r\n        name\r\n        desc\r\n        id\r\n        items {\r\n          name\r\n          description\r\n          cost\r\n          imgUrl\r\n          id\r\n        }\r\n      }\r\n      facebook\r\n      youtube\r\n      instagram\r\n      twitter\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport const GET_ID = gql`\r\n  query {\r\n    me {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { GET_ITEMS_NOT_IN_CATEGORY, GET_CATEGORIES } from \"../../../queries\";\r\nimport {\r\n  ADD_CATEGORY,\r\n  ADD_ITEM_TO_CATEGORY,\r\n  EDIT_CATEGORY,\r\n  REMOVE_ITEM_FROM_CATEGORY,\r\n} from \"../../../mutations\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Input,\r\n  Snackbar,\r\n  Chip,\r\n  MenuItem,\r\n  InputLabel,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  chip: {\r\n    background: theme.palette.grey[100],\r\n    minHeight: 100,\r\n    marginBottom: 10,\r\n  },\r\n  select: {\r\n    width: 150,\r\n  },\r\n  label: {\r\n    margin: theme.spacing(2, 0, 0),\r\n    color: theme.palette.grey[700],\r\n  },\r\n  containerItem: {},\r\n}));\r\n\r\nfunction MenuDisplay({ show }: { show: boolean }) {\r\n  const classes = useStyles();\r\n  const [response, setResponse] = React.useState(\"\");\r\n  const [categoryName, setCategoryName] = React.useState(\"\");\r\n  const [categoryDesc, setCategoryDesc] = React.useState(\"\");\r\n\r\n  const [currCategory, setCurrCategory] = React.useState(\"\");\r\n  const [editedCategoryName, editCategoryName] = React.useState(\"\");\r\n  const [editedCategoryDesc, editCategoryDesc] = React.useState(\"\");\r\n  const [selectedItems, changeSelectedItems] = React.useState<string[]>([]);\r\n\r\n  const items = useQuery(GET_ITEMS_NOT_IN_CATEGORY);\r\n  const categories = useQuery(GET_CATEGORIES);\r\n  const [addCategory] = useMutation(ADD_CATEGORY, {\r\n    onError: (error) => {\r\n      if (error.graphQLErrors.length)\r\n        setResponse(error.graphQLErrors[0].message);\r\n    },\r\n    refetchQueries: [{ query: GET_CATEGORIES }],\r\n  });\r\n  const [editCategory] = useMutation(EDIT_CATEGORY, {\r\n    onError: (error) => {\r\n      if (error.graphQLErrors.length)\r\n        setResponse(error.graphQLErrors[0].message);\r\n    },\r\n    refetchQueries: [{ query: GET_CATEGORIES }],\r\n  });\r\n  const [addItemsToCategory] = useMutation(ADD_ITEM_TO_CATEGORY, {\r\n    onError: (error) => {\r\n      if (error.graphQLErrors.length)\r\n        setResponse(error.graphQLErrors[0].message);\r\n    },\r\n    refetchQueries: [\r\n      { query: GET_ITEMS_NOT_IN_CATEGORY },\r\n      { query: GET_CATEGORIES },\r\n    ],\r\n  });\r\n  const [removeItemFromCategory] = useMutation(REMOVE_ITEM_FROM_CATEGORY, {\r\n    onError: (error) => {\r\n      if (error.graphQLErrors.length)\r\n        setResponse(error.graphQLErrors[0].message);\r\n    },\r\n    refetchQueries: [\r\n      { query: GET_ITEMS_NOT_IN_CATEGORY },\r\n      { query: GET_CATEGORIES },\r\n    ],\r\n  });\r\n\r\n  const [menuItems, setMenuItems] = React.useState<React.ReactElement[]>([]);\r\n  const [chips, setChips] = React.useState<React.ReactElement[]>([]);\r\n  const [itemsNotInCategories, setItemsNotInCategories] = React.useState<\r\n    React.ReactElement[]\r\n  >([]);\r\n  React.useEffect(() => {\r\n    if (!items.loading) {\r\n      const getItemsNotInCategory = items.data.getItemsNotInCategory;\r\n      if (getItemsNotInCategory instanceof Array) {\r\n        setItemsNotInCategories(\r\n          getItemsNotInCategory.map(({ name, id }) => (\r\n            <MenuItem key={id} value={id}>\r\n              {name}\r\n            </MenuItem>\r\n          ))\r\n        );\r\n      }\r\n    }\r\n  }, [items]);\r\n\r\n  React.useEffect(() => {\r\n    if (!categories.loading) {\r\n      const handleDelete = (id: string) => () => {\r\n        removeItemFromCategory({\r\n          variables: {\r\n            id: currCategory,\r\n            itemId: id,\r\n          },\r\n        }).then((res) => {\r\n          if (res) setResponse(\"Successfully removed item from category\");\r\n        });\r\n      };\r\n      const getCategories = categories.data.getCategories;\r\n      if (getCategories instanceof Array) {\r\n        type ItemType = {\r\n          name: string;\r\n          id: string;\r\n        };\r\n        type CategoryType = {\r\n          items: Array<ItemType>;\r\n          desc: string;\r\n          name: string;\r\n        };\r\n        setMenuItems(\r\n          getCategories.map(({ id, name }) => {\r\n            return (\r\n              <MenuItem key={id} value={id}>\r\n                {name}\r\n              </MenuItem>\r\n            );\r\n          })\r\n        );\r\n        const currCategoryObject: CategoryType = getCategories.find(\r\n          ({ id }) => id === currCategory\r\n        );\r\n        if (currCategoryObject && currCategoryObject.items) {\r\n          setChips(\r\n            currCategoryObject.items.map((item) => (\r\n              <Chip\r\n                size=\"medium\"\r\n                label={\r\n                  item.name.length <= 20\r\n                    ? item.name\r\n                    : item.name.substring(0, 20) + \"...\"\r\n                }\r\n                key={item.id}\r\n                onDelete={handleDelete(item.id)}\r\n              />\r\n            ))\r\n          );\r\n          editCategoryDesc(\r\n            currCategoryObject.desc ? currCategoryObject.desc : \"\"\r\n          );\r\n          editCategoryName(currCategoryObject.name);\r\n        }\r\n      }\r\n    }\r\n  }, [categories, currCategory, removeItemFromCategory]);\r\n\r\n  const onSubmitNewCategory = (event: React.SyntheticEvent<EventTarget>) => {\r\n    event.preventDefault();\r\n    if (!categoryName) setResponse(\"Category name is required\");\r\n    else {\r\n      addCategory({\r\n        variables: { name: categoryName, desc: categoryDesc },\r\n      }).then((res) => {\r\n        if (res) setResponse(\"Successfully added a new category\");\r\n      });\r\n      setCategoryDesc(\"\");\r\n      setCategoryName(\"\");\r\n    }\r\n  };\r\n  const onSubmitEditCategory = (event: React.SyntheticEvent<EventTarget>) => {\r\n    event.preventDefault();\r\n    if (!currCategory) {\r\n      setResponse(\"Select a category to edit\");\r\n      return;\r\n    }\r\n    if (editedCategoryName || editedCategoryDesc) {\r\n      editCategory({\r\n        variables: {\r\n          id: currCategory,\r\n          name: editedCategoryName,\r\n          desc: editedCategoryDesc,\r\n        },\r\n      }).then((res) => {\r\n        if (res) setResponse(\"Successfully edited the category\");\r\n      });\r\n    }\r\n    if (selectedItems.length) {\r\n      addItemsToCategory({\r\n        variables: { id: currCategory, itemId: selectedItems },\r\n      }).then((res) => {\r\n        if (res) setResponse(\"Successfully edited the category\");\r\n      });\r\n      changeSelectedItems([]);\r\n    }\r\n  };\r\n\r\n  if (!show) return null;\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.root}>\r\n      <Grid container spacing={6}>\r\n        <Grid item md={12} className={classes.containerItem}>\r\n          <form noValidate onSubmit={onSubmitNewCategory}>\r\n            <Typography component=\"h2\" variant=\"h6\">\r\n              Add a New Category\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              label=\"Category Name\"\r\n              autoFocus\r\n              value={categoryName}\r\n              onChange={({ target }) => setCategoryName(target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Category Description\"\r\n              value={categoryDesc}\r\n              multiline\r\n              onChange={({ target }) => setCategoryDesc(target.value)}\r\n            />\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n              Add new category\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        <Grid item md={12} className={classes.containerItem}>\r\n          <form noValidate onSubmit={onSubmitEditCategory}>\r\n            <Typography component=\"h2\" variant=\"h6\">\r\n              Edit an Existing Category\r\n            </Typography>\r\n            <TextField\r\n              label=\"Select category\"\r\n              select\r\n              fullWidth\r\n              value={currCategory}\r\n              onChange={(event) => setCurrCategory(event.target.value)}\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n            >\r\n              {menuItems}\r\n            </TextField>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Category Name\"\r\n              value={editedCategoryName}\r\n              onChange={({ target }) => editCategoryName(target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Category Description\"\r\n              value={editedCategoryDesc}\r\n              multiline\r\n              onChange={({ target }) => editCategoryDesc(target.value)}\r\n            />\r\n            <InputLabel id=\"add-items-to-category\" className={classes.label}>\r\n              {itemsNotInCategories.length === 1\r\n                ? \"Add an item to the category (1 item total)\"\r\n                : !itemsNotInCategories.length\r\n                ? \"All items are in categories already.\"\r\n                : `Add item(s) to the category (${itemsNotInCategories.length} total)`}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"add-items-to-category\"\r\n              multiple\r\n              input={<Input />}\r\n              className={classes.select}\r\n              value={selectedItems}\r\n              disabled={itemsNotInCategories.length === 0}\r\n              onChange={(event) => {\r\n                changeSelectedItems(event.target.value as string[]);\r\n              }}\r\n              MenuProps={{\r\n                PaperProps: {\r\n                  style: {\r\n                    width: 250,\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              {itemsNotInCategories}\r\n            </Select>\r\n\r\n            <Typography\r\n              component=\"h3\"\r\n              variant=\"subtitle1\"\r\n              className={classes.label}\r\n            >\r\n              Current Items\r\n            </Typography>\r\n            <div className={classes.chip}>{chips}</div>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n              Edit Category\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Snackbar\r\n        open={!!response}\r\n        autoHideDuration={6000}\r\n        onClose={() => setResponse(\"\")}\r\n      >\r\n        {response.startsWith(\"Success\") ? (\r\n          <Alert severity=\"success\">{response}</Alert>\r\n        ) : response !== \"\" ? (\r\n          <Alert severity=\"error\">{response}</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MenuDisplay;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Snackbar,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { EDIT_USER_CONTACT } from \"../../../mutations\";\r\nimport { GET_ME } from \"../../../queries\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"margin-top\": theme.spacing(4),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction RestaurantInfoDisplay({ show }: { show: boolean }) {\r\n  const classes = useStyles();\r\n  const initialInfo = useQuery(GET_ME);\r\n  const [editUserContact] = useMutation(EDIT_USER_CONTACT, {\r\n    onError: (error) => {\r\n      if (error.graphQLErrors.length)\r\n        setResponse(error.graphQLErrors[0].message);\r\n    },\r\n  });\r\n  const [instagram, setInsta] = React.useState(\"\");\r\n  const [youtube, setYoutube] = React.useState(\"\");\r\n  const [twitter, setTwitter] = React.useState(\"\");\r\n  const [facebook, setFacebook] = React.useState(\"\");\r\n  const [phone, setPhone] = React.useState(\"\");\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [response, setResponse] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    if (!initialInfo.loading) {\r\n      const {\r\n        address,\r\n        phone,\r\n        facebook,\r\n        youtube,\r\n        instagram,\r\n        twitter,\r\n      } = initialInfo.data.me;\r\n\r\n      setInsta(instagram);\r\n      setYoutube(youtube);\r\n      setTwitter(twitter);\r\n      setFacebook(facebook);\r\n      setPhone(phone);\r\n      setAddress(address);\r\n    }\r\n  }, [initialInfo]);\r\n  const onSubmit = (event: React.SyntheticEvent<EventTarget>) => {\r\n    event.preventDefault();\r\n    editUserContact({\r\n      variables: {\r\n        address,\r\n        phone,\r\n        facebook,\r\n        youtube,\r\n        instagram,\r\n        twitter,\r\n      },\r\n    }).then((res) => {\r\n      if (res) setResponse(\"Success\");\r\n    });\r\n  };\r\n\r\n  if (!show) return null;\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\r\n      <form noValidate onSubmit={onSubmit}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Instagram Link\"\r\n              autoFocus\r\n              value={instagram}\r\n              onChange={({ target }) => setInsta(target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Twitter Link\"\r\n              value={twitter}\r\n              onChange={({ target }) => setTwitter(target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Facebook Link\"\r\n              value={facebook}\r\n              onChange={({ target }) => setFacebook(target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Youtube Link\"\r\n              value={youtube}\r\n              onChange={({ target }) => setYoutube(target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Restaurant Address\"\r\n              value={address}\r\n              onChange={({ target }) => setAddress(target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Restaurant Phone Number\"\r\n              value={phone}\r\n              onChange={({ target }) => setPhone(target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          className={classes.submit}\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Save\r\n        </Button>\r\n      </form>\r\n      <Snackbar\r\n        open={!!response}\r\n        autoHideDuration={6000}\r\n        onClose={() => setResponse(\"\")}\r\n      >\r\n        {response === \"Success\" ? (\r\n          <Alert severity=\"success\">Success!</Alert>\r\n        ) : response !== \"\" ? (\r\n          <Alert severity=\"error\">{response}</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RestaurantInfoDisplay;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  createStyles,\r\n  lighten,\r\n  makeStyles,\r\n  Theme, // eslint-disable-line\r\n} from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  GET_ITEMS,\r\n  GET_ITEMS_NOT_IN_CATEGORY,\r\n  GET_CATEGORIES,\r\n} from \"../../../queries\";\r\nimport { DELETE_ITEM, DELETE_ALL_ITEMS } from \"../../../mutations\";\r\n\r\ninterface Data {\r\n  name: string;\r\n  cost: number;\r\n  description: string;\r\n  id: string;\r\n}\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\ntype Order = \"asc\" | \"desc\";\r\n\r\nfunction getComparator<Key extends keyof number | string>(\r\n  order: Order,\r\n  orderBy: Key\r\n): (\r\n  a: { [key in Key]: number | string },\r\n  b: { [key in Key]: number | string }\r\n) => number {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\ninterface HeadCell {\r\n  disablePadding: boolean;\r\n  id: keyof Data;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: HeadCell[] = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Name\",\r\n  },\r\n  { id: \"cost\", numeric: true, disablePadding: false, label: \"Cost\" },\r\n  {\r\n    id: \"description\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Description\",\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  classes: ReturnType<typeof useStyles>;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Data\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { classes, onSelectAllClick, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property: keyof Data) => (\r\n    event: React.MouseEvent<unknown>\r\n  ) => {\r\n    if (property !== \"description\") onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={\"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === \"light\"\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n          }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n          },\r\n    title: {\r\n      flex: \"1 1 100%\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  numSelected: number;\r\n  handleDelete: (event: React.SyntheticEvent) => void;\r\n  filter: string;\r\n  setFilter: (val: string) => void;\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, handleDelete, filter, setFilter } = props;\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Items\r\n        </Typography>\r\n      )}\r\n      <TextField\r\n        fullWidth\r\n        label=\"Filter by name\"\r\n        onChange={(e) => setFilter(e.target.value)}\r\n        value={filter}\r\n      >\r\n        test\r\n      </TextField>\r\n      {numSelected > 0 && (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n    paper: {\r\n      width: \"100%\",\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: \"rect(0 0 0 0)\",\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: \"hidden\",\r\n      padding: 0,\r\n      position: \"absolute\",\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ItemTable({\r\n  setResponse,\r\n}: {\r\n  setResponse: (err: string) => void;\r\n}) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState<Order>(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState<keyof Data>(\"name\");\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [rows, setRows] = React.useState<Data[]>([]);\r\n  const [filter, setFilter] = React.useState(\"\");\r\n  const items = useQuery(GET_ITEMS);\r\n  const [deleteItem] = useMutation(DELETE_ITEM, {\r\n    onError: (error) => {\r\n      if (error.graphQLErrors.length) {\r\n        const msg = error.graphQLErrors[0].message;\r\n        setResponse(msg);\r\n        console.log(msg);\r\n      }\r\n    },\r\n    refetchQueries: [\r\n      { query: GET_ITEMS },\r\n      { query: GET_ITEMS_NOT_IN_CATEGORY },\r\n      { query: GET_CATEGORIES },\r\n    ],\r\n  });\r\n  const [deleteAllItems] = useMutation(DELETE_ALL_ITEMS, {\r\n    onError: (error) => {\r\n      if (error.graphQLErrors.length) {\r\n        const msg = error.graphQLErrors[0].message;\r\n        setResponse(msg);\r\n        console.log(msg);\r\n      }\r\n    },\r\n    refetchQueries: [\r\n      { query: GET_ITEMS },\r\n      { query: GET_ITEMS_NOT_IN_CATEGORY },\r\n      { query: GET_CATEGORIES },\r\n    ],\r\n  });\r\n  React.useEffect(() => {\r\n    if (!items.loading) {\r\n      const listOfItems = items.data.getItems;\r\n      if (listOfItems instanceof Array) {\r\n        const newRows = listOfItems.map(({ name, id, description, cost }) => ({\r\n          name,\r\n          cost,\r\n          description,\r\n          id,\r\n        }));\r\n        setRows(newRows);\r\n      }\r\n    }\r\n  }, [items]);\r\n  if (items.loading) return <div>loading...</div>;\r\n  const displayRows = rows.filter(({ name }) => name.includes(filter));\r\n\r\n  const handleRequestSort = (\r\n    _: React.MouseEvent<unknown>,\r\n    property: keyof Data\r\n  ) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const rowIds = displayRows.map((n) => n.id);\r\n    if (event.target.checked) {\r\n      const newSelecteds = rowIds\r\n        .concat(selected)\r\n        .filter((value, index, self) => self.indexOf(value) === index);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected(selected.filter((item) => !rowIds.includes(item)));\r\n  };\r\n\r\n  const handleClick = (event: React.MouseEvent<unknown>, id: string) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selected.length === rows.length) {\r\n      deleteAllItems().then((res) => {\r\n        if (res) setResponse(\"Successfully deleted all items\");\r\n      });\r\n      setRows([]);\r\n    } else {\r\n      let success = true;\r\n      selected.forEach((id) => {\r\n        deleteItem({ variables: { id } }).then((res) => {\r\n          if (!res) success = false;\r\n        });\r\n      });\r\n      setRows(rows.filter(({ id }) => !selected.includes(id)));\r\n      if (success) setResponse(\"Successfully deleted selected items\");\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const isSelected = (id: string) => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          handleDelete={handleDelete}\r\n          setFilter={setFilter}\r\n          filter={filter}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={\"small\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n            <TableBody>\r\n              {stableSort(displayRows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row.cost}</TableCell>\r\n                      <TableCell align=\"left\">{row.description}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25]}\r\n          component=\"div\"\r\n          count={displayRows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Button,\r\n  Snackbar,\r\n  FormLabel,\r\n} from \"@material-ui/core\";\r\nimport { FilePond, registerPlugin, File } from \"react-filepond\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { ADD_ITEM } from \"../../../mutations\";\r\nimport { GET_ITEMS, GET_ITEMS_NOT_IN_CATEGORY } from \"../../../queries\";\r\nimport ItemTable from \"./ItemTable\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\r\nimport FilePondPluginImageResize from \"filepond-plugin-image-resize\";\r\n// @ts-ignore\r\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\r\n\r\nregisterPlugin(\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginFileValidateType,\r\n  FilePondPluginImageResize,\r\n  FilePondPluginFileEncode\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  firstItem: {\r\n    marginTop: 0,\r\n  },\r\n  lastItem: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  desc: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\nfunction AddItemDisplay({ show }: { show: boolean }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [cost, setCost] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const classes = useStyles();\r\n  const [focus, setFocus] = useState<string | null>(null);\r\n  const [file, setFile] = useState<File[]>([]);\r\n  const [addItem] = useMutation(ADD_ITEM, {\r\n    update: (store, response) => {\r\n      type dataType = {\r\n        getItems: unknown[];\r\n      };\r\n      const dataInStore = store.readQuery<dataType>({\r\n        query: GET_ITEMS,\r\n      });\r\n      let items = [response.data.addItem];\r\n      if (dataInStore) items = items.concat(dataInStore.getItems);\r\n\r\n      store.writeQuery({\r\n        query: GET_ITEMS,\r\n        data: {\r\n          getItems: items,\r\n        },\r\n      });\r\n    },\r\n    onError: (error) => {\r\n      if (error.graphQLErrors.length) {\r\n        const msg = error.graphQLErrors[0].message;\r\n        setResponse(msg);\r\n        console.log(msg);\r\n      }\r\n    },\r\n    refetchQueries: [{ query: GET_ITEMS_NOT_IN_CATEGORY }],\r\n  });\r\n\r\n  if (!show) return null;\r\n  const onSubmit = (e: React.SyntheticEvent<EventTarget>) => {\r\n    e.preventDefault();\r\n    if (!name || !cost) setResponse(\"Missing entries\");\r\n    else if (!parseFloat(cost)) setResponse(\"Please fix the entry for cost\");\r\n    else {\r\n      setResponse(\"Successfully added an item\");\r\n      addItem({\r\n        variables: {\r\n          name,\r\n          cost: parseFloat(cost),\r\n          description: desc,\r\n          imgStringBase64:\r\n            // @ts-ignore\r\n            file.length && file[0]\r\n              ? `data:${\r\n                  // @ts-ignore\r\n                  file[0].file.type\r\n                  // @ts-ignore\r\n                };base64,${file[0].getFileEncodeBase64String()}`\r\n              : \"\",\r\n        },\r\n      });\r\n      setName(\"\");\r\n      setCost(\"\");\r\n      setDesc(\"\");\r\n      setFile([]);\r\n    }\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"lg\" className={classes.root}>\r\n      <form noValidate onSubmit={onSubmit}>\r\n        <Grid container spacing={5} alignItems=\"flex-start\">\r\n          <Grid container item xs={12} lg={4}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Item name\"\r\n                autoFocus\r\n                value={name}\r\n                className={classes.firstItem}\r\n                onChange={({ target }) => setName(target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Cost\"\r\n                value={cost}\r\n                onChange={({ target }) => setCost(target.value)}\r\n                onFocus={() => setFocus(\"cost\")}\r\n                onBlur={() => setFocus(null)}\r\n                error={!focus && cost !== \"\" && !parseFloat(cost)}\r\n                helperText={\r\n                  !focus && cost !== \"\" && !parseFloat(cost)\r\n                    ? \"this is not a number\"\r\n                    : \"\"\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                multiline\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Description\"\r\n                value={desc}\r\n                className={classes.desc}\r\n                onChange={({ target }) => setDesc(target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormLabel htmlFor=\"file-upload\">\r\n                {\"Upload image (not required) \"}\r\n              </FormLabel>\r\n              <FilePond\r\n                files={file}\r\n                // @ts-ignore\r\n                imagePreviewHeight={300}\r\n                imagePreviewMaxFileSize=\"2MB\"\r\n                imageResizeMode=\"cover\"\r\n                acceptedFileTypes={[\"image/*\"]}\r\n                allowMultiple={false}\r\n                getFileEncodeBase64String\r\n                onupdatefiles={(fileItems) => {\r\n                  if (fileItems.length && fileItems[0]) {\r\n                    setFile(fileItems);\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Button\r\n              className={classes.lastItem}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Add new item\r\n            </Button>\r\n          </Grid>\r\n          <Grid container item xs={12} lg={8}>\r\n            <Grid item xs>\r\n              <ItemTable setResponse={setResponse} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Snackbar\r\n        open={!!response}\r\n        autoHideDuration={6000}\r\n        onClose={() => setResponse(\"\")}\r\n      >\r\n        {response.startsWith(\"Success\") ? (\r\n          <Alert severity=\"success\">{response}</Alert>\r\n        ) : response !== \"\" ? (\r\n          <Alert severity=\"error\">{response}</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AddItemDisplay;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { GET_ID } from \"../../../queries\";\r\nimport { Link, Typography, Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n}));\r\nfunction DashboardDisplay({ show }: { show: boolean }) {\r\n  const classes = useStyles();\r\n  const getId = useQuery(GET_ID) as { data: { me: { id: string } } };\r\n  const link = getId.data\r\n    ? `${window.location.origin}/display/${getId.data.me.id}`\r\n    : \"\";\r\n  if (!show) return null;\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Link href={link} target=\"blank\">\r\n        <Typography component=\"p\" variant=\"h6\">\r\n          Click here for your website\r\n        </Typography>\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\nexport default DashboardDisplay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport clsx from \"clsx\";\r\nimport {\r\n  CssBaseline,\r\n  Typography,\r\n  Button,\r\n  Drawer,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport MainListItems from \"./MainListItems\";\r\nimport { GET_ME } from \"../../queries\";\r\nimport RegisterForm from \"../RegisterForm\";\r\nimport MenuDisplay from \"./displays/MenuDisplay\";\r\nimport RestaurantInfoDisplay from \"./displays/RestaurantInfoDisplay\";\r\nimport AddItemDisplay from \"./displays/AddItemDisplay\";\r\nimport DashboardDisplay from \"./displays/DashboardDisplay\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  separator: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [onDisplay, setOnDisplay] = React.useState(\"dashboard\");\r\n  const client = useApolloClient();\r\n  const result = useQuery(GET_ME);\r\n\r\n  let user = null;\r\n  if (!result.loading) user = result.data.me;\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    client.resetStore();\r\n  };\r\n  if (user)\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={clsx(classes.appBar, open && classes.appBarShift)}\r\n        >\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={() => setOpen(true)}\r\n              className={clsx(\r\n                classes.menuButton,\r\n                open && classes.menuButtonHidden\r\n              )}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n            <Button variant=\"outlined\" color=\"inherit\" onClick={logout}>\r\n              <Typography component=\"p\" variant=\"h6\" color=\"inherit\">\r\n                <b>logout</b>\r\n              </Typography>\r\n            </Button>\r\n            <div className={classes.separator}></div>\r\n            <IconButton color=\"inherit\">\r\n              <SettingsIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={() => setOpen(false)}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <MainListItems display={onDisplay} setOnDisplay={setOnDisplay} />\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <AddItemDisplay show={onDisplay === \"addMenuItem\"} />\r\n          <DashboardDisplay show={onDisplay === \"dashboard\"} />\r\n          <MenuDisplay show={onDisplay === \"menu\"} />\r\n          <RestaurantInfoDisplay show={onDisplay === \"restaurantInfo\"} />\r\n        </main>\r\n      </div>\r\n    );\r\n  if (!result.loading && !user) return <RegisterForm />;\r\n\r\n  return <div></div>;\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, Typography, CardContent, Grid, Button } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n  title: { textAlign: \"center\", display: \"block\" },\r\n  desc: { textAlign: \"center\" },\r\n  content: {\r\n    width: \"100%\",\r\n  },\r\n  menuTitle: {\r\n    padding: theme.spacing(3, 0),\r\n  },\r\n  button: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  img: {\r\n    maxHeight: 400,\r\n    width: \"100%\",\r\n  },\r\n}));\r\ntype itemType = {\r\n  name: string;\r\n  description: string;\r\n  cost: number;\r\n  imgUrl: string;\r\n  id: string;\r\n};\r\ntype categoryType = {\r\n  name: string;\r\n  desc: string;\r\n  id: string;\r\n  items: itemType[];\r\n};\r\ntype propType = {\r\n  categories: categoryType[];\r\n};\r\nconst Menu = ({ categories }: propType) => {\r\n  const classes = useStyles();\r\n  const [items, setItems] = React.useState<itemType[] | null>(null);\r\n  return (\r\n    <>\r\n      <Typography component=\"h1\" variant=\"h2\" className={classes.menuTitle}>\r\n        Menu\r\n      </Typography>\r\n\r\n      {!items && (\r\n        <Grid container spacing={2}>\r\n          {categories\r\n            .filter((category) => !!category.items.length)\r\n            .map((category) => (\r\n              <Grid item xs={6} sm={6} md={4} lg={3} key={category.id}>\r\n                <Card\r\n                  variant=\"elevation\"\r\n                  elevation={5}\r\n                  className={classes.root}\r\n                >\r\n                  <Button\r\n                    className={classes.content}\r\n                    onClick={() => setItems(category.items)}\r\n                  >\r\n                    <CardContent>\r\n                      <Typography\r\n                        className={classes.title}\r\n                        color=\"textPrimary\"\r\n                        variant=\"h6\"\r\n                        component=\"h2\"\r\n                      >\r\n                        {category.name.toUpperCase()}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        className={classes.desc}\r\n                      >\r\n                        {category.desc}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Button>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      )}\r\n      {!!items && (\r\n        <>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setItems(null)}\r\n            className={classes.button}\r\n          >\r\n            <Typography component=\"p\" variant=\"button\">\r\n              Go back\r\n            </Typography>\r\n          </Button>\r\n          <Grid container spacing={2}>\r\n            {items.map((item) => (\r\n              <Grid item xs={6} sm={6} md={4} lg={3} key={item.id}>\r\n                <Card\r\n                  variant=\"elevation\"\r\n                  elevation={5}\r\n                  className={classes.root}\r\n                >\r\n                  {item.imgUrl && (\r\n                    <img\r\n                      src={item.imgUrl}\r\n                      alt={item.name}\r\n                      className={classes.img}\r\n                    />\r\n                  )}\r\n                  <CardContent>\r\n                    <Typography\r\n                      className={classes.title}\r\n                      color=\"textPrimary\"\r\n                      variant=\"h6\"\r\n                      component=\"h2\"\r\n                    >\r\n                      {item.name}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      variant=\"subtitle1\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                      className={classes.desc}\r\n                    >\r\n                      {item.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\ntype propType = {\r\n  email: string;\r\n  address?: string;\r\n  phone?: string;\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: { marginTop: theme.spacing(2) },\r\n}));\r\nconst Contacts = ({ email, address, phone }: propType) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography component=\"h2\" variant=\"h4\" color=\"primary\">\r\n        <b>Email address:</b> {email}\r\n      </Typography>\r\n      {address && (\r\n        <Typography component=\"h2\" variant=\"h4\" color=\"primary\">\r\n          <b>Restaurant location:</b> {address}\r\n        </Typography>\r\n      )}\r\n      {phone && (\r\n        <Typography component=\"h2\" variant=\"h4\" color=\"primary\">\r\n          <b>Phone number:</b> {phone}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { GET_USER } from \"../queries\";\r\nimport Menu from \"./Menu\";\r\nimport Contacts from \"./Contacts\";\r\nimport {\r\n  AppBar,\r\n  Typography,\r\n  Container,\r\n  Button,\r\n  Toolbar,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appbar: {\r\n    padding: theme.spacing(1),\r\n    background: \"white\",\r\n  },\r\n  spacer: theme.mixins.toolbar,\r\n  container: {\r\n    padding: theme.spacing(4),\r\n  },\r\n  restaurantName: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0, 2),\r\n  },\r\n}));\r\ntype propType = {\r\n  match: {\r\n    params: {\r\n      repo: string;\r\n    };\r\n  };\r\n};\r\ntype dataType = {\r\n  email: string;\r\n  restaurantName: string;\r\n  address?: string;\r\n  phone?: string;\r\n  categories: {\r\n    name: string;\r\n    desc: string;\r\n    id: string;\r\n    items: {\r\n      name: string;\r\n      description: string;\r\n      cost: number;\r\n      imgUrl: string;\r\n      id: string;\r\n    }[];\r\n  }[];\r\n  facebook?: string;\r\n  youtube?: string;\r\n  instagram?: string;\r\n  twitter?: string;\r\n};\r\nconst FrontPage = (props: propType) => {\r\n  const user = useQuery(GET_USER, {\r\n    variables: { id: props.match.params.repo },\r\n  });\r\n  const [data, setData] = React.useState<null | dataType>(null);\r\n  React.useEffect(() => {\r\n    if (!user.loading && user.data) {\r\n      const data = (user.data as { getUser: dataType }).getUser;\r\n      if (data.facebook && !data.facebook?.match(/^http(s)?:/))\r\n        data.facebook = \"https://\" + data.facebook;\r\n      if (data.youtube && !data.youtube?.match(/^http(s)?:/))\r\n        data.youtube = \"https://\" + data.youtube;\r\n      if (data.instagram && !data.instagram?.match(/^http(s)?:/))\r\n        data.instagram = \"https://\" + data.instagram;\r\n      if (data.twitter && !data.twitter?.match(/^http(s)?:/))\r\n        data.twitter = \"https://\" + data.twitter;\r\n      setData(data);\r\n    }\r\n  }, [user]);\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(\"Menu\");\r\n\r\n  if (!data) return <div></div>;\r\n  return (\r\n    <div>\r\n      <AppBar className={classes.appbar} position=\"absolute\">\r\n        <Toolbar>\r\n          <Button\r\n            onClick={() => setOpen(\"Menu\")}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            className={classes.button}\r\n          >\r\n            <Typography variant=\"h6\">Menu</Typography>\r\n          </Button>\r\n          <Button\r\n            onClick={() => setOpen(\"Contacts\")}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            className={classes.button}\r\n          >\r\n            <Typography variant=\"h6\">Contacts</Typography>\r\n          </Button>\r\n          <Typography\r\n            color=\"primary\"\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n            className={classes.restaurantName}\r\n          >\r\n            {data.restaurantName}\r\n          </Typography>\r\n          {data && data.instagram && (\r\n            <IconButton target=\"_blank\" href={`${data.instagram}`}>\r\n              <InstagramIcon />\r\n            </IconButton>\r\n          )}\r\n          {data && data.twitter && (\r\n            <IconButton target=\"_blank\" href={`${data.twitter}`}>\r\n              <TwitterIcon />\r\n            </IconButton>\r\n          )}\r\n          {data && data.youtube && (\r\n            <IconButton target=\"_blank\" href={`${data.youtube}`}>\r\n              <YouTubeIcon />\r\n            </IconButton>\r\n          )}\r\n          {data && data.facebook && (\r\n            <IconButton target=\"_blank\" href={`${data.facebook}`}>\r\n              <FacebookIcon />\r\n            </IconButton>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        <div className={classes.spacer} />\r\n        <Container className={classes.container} maxWidth=\"lg\">\r\n          {open === \"Menu\" && <Menu categories={data.categories} />}\r\n          {open === \"Contacts\" && (\r\n            <Contacts\r\n              email={data.email}\r\n              address={data.address}\r\n              phone={data.phone}\r\n            />\r\n          )}\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  // return <div>{JSON.stringify(user.loading ? null : user.data)}</div>;\r\n};\r\nexport default FrontPage;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport RegisterForm from \"./components/RegisterForm\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport theme from \"./styling/theme\";\r\nimport FrontPage from \"./displaySite/FrontPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <Switch>\r\n          <Route path=\"/register\" component={RegisterForm} />\r\n          <Route path=\"/login\" component={LoginForm} />\r\n          <Route path=\"/dashboard\" component={Dashboard} />\r\n          <Route path=\"/display/:repo\" component={FrontPage} />\r\n          <Route path=\"/\" component={Dashboard} />\r\n        </Switch>\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { createHttpLink } from \"apollo-link-http\";\r\nimport { setContext } from \"apollo-link-context\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\n// This is for non-production\r\n// const httpLink = createHttpLink({\r\n//   uri: `http://localhost:4000`,\r\n// }); \r\n\r\n// This is for production\r\nconst httpLink = createHttpLink({\r\n  uri: `/graphql`,\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem(\"user-logged-in-token\");\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}